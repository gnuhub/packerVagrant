/*************************************************
 -- 		Tablespace definitions    
 *************************************************/
 
 /** Tablespace for the following table(s):
 --  PROCESSLOG
 --  AUDIT_EVENT
 --  AUDIT_MGMT_TARGET
 --  AUDIT_MGMT_PROVISIONING
 --  AUDIT_MGMT_DELEGATE
 --  RECERTIFICATIONLOG (new in 5.0) 
 */
CREATE TABLESPACE TMTS32LG IN itimdbTag BUFFERPOOL BP32K
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 32000
       SECQTY 3200
 ERASE YES PCTFREE 0 SEGSIZE 28 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --  REMOTE_RESOURCES_RECON_QUERIES
 */
CREATE TABLESPACE TMTS32MD IN itimdbTag BUFFERPOOL BP32K
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 3200
       SECQTY 320
 ERASE YES PCTFREE 0 SEGSIZE 28 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --  AUTH_KEY
 --  ENTITLEMENT_PROVISIONINGPARAMS
 */
CREATE TABLESPACE TMTS32SM IN itimdbTag BUFFERPOOL BP32K
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 3200
       SECQTY 320
 ERASE YES PCTFREE 0 SEGSIZE 28 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --  RECONCILIATION
 --  RECONCILIATION_INFO
 */
CREATE TABLESPACE TMTS4LG IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 32000
       SECQTY 3200
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --  RESOURCE_PROVIDERS
 --  REMOTE_RESOURCES_RECONS
 --  I18NMESSAGES
 */
CREATE TABLESPACE TMTS4MD IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 3200
       SECQTY 320
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --  NEXTVALUE
 --  VIEW_DEFINITION (new in 5.0)
 --  TASKS_VIEWABLE (new in 5.0)
 --  COMMON_TASKS (new in 5.0)
 --  SUMMARY_ORDER (new in 5.0)
 */
CREATE TABLESPACE TMTS4SM IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 320
       SECQTY 32
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --All static reporting-related tables (consider as MD size)
 */
CREATE TABLESPACE TMTSRPT IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 3200
       SECQTY 320
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 -- All reporting entity tables
 */
CREATE TABLESPACE TMTSRPTE IN itimdbTag BUFFERPOOL BP32K
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 32000
       SECQTY 3200
 ERASE YES PCTFREE 0 SEGSIZE 28 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Miscellaneous tables:
 --  PO_TOPIC_TABLE
 --  PO_NOTIFICATION_TABLE
 --  PO_NOTIFICATION_HTMLBODY_TABLE
 --  BULK_DATA_SERVICE
 --  BULK_DATA_STORE
 --  BULK_DATA_INDEX
 --  MIGRATION_STATUS
 --  SERVICE_ACCOUNT_MAPPING (new in 5.0)
 --  SCRIPT (new in 5.0)
 --  MANUAL_SERVICE_RECON_ACCOUNTS (new in 5.0)
 */
CREATE TABLESPACE TMTSMISC IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 32000
       SECQTY 3200
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile ACCT_CHANGE table
 */
CREATE TABLESPACE TMTSPOL1 IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 3200
       SECQTY 320
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ANY CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile ATTR_CHANGE table
 */
CREATE TABLESPACE TMTSPOL2 IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 32000
       SECQTY 3200
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ANY CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile POLICY_ANALYSIS_ERROR table
 */
CREATE TABLESPACE TMTSPOL3 IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 3200
       SECQTY 320
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ANY CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile COMPLIANCE_ALERT table
 */
CREATE TABLESPACE TMTSPOL4 IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 3200
       SECQTY 320
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ANY CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Non-volatile POLICY_ANALYSIS table
 */
CREATE TABLESPACE TMTSPOL5 IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 320
       SECQTY 32
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile REMOTE_SERVICES_REQUESTS table
 */
CREATE TABLESPACE TMTSRR1 IN itimdbTag BUFFERPOOL BP32K
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 32000
       SECQTY 3200
 ERASE YES PCTFREE 0 SEGSIZE 28 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile LCR_INPROGRESS_TABLE table
 */
CREATE TABLESPACE TMTSWF1 IN itimdbTag BUFFERPOOL BP32K
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 128000
       SECQTY 32000
 ERASE YES PCTFREE 0 SEGSIZE 28 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile WORKITEM table
 */
CREATE TABLESPACE TMTSWF2 IN itimdbTag BUFFERPOOL BP32K
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 3200
       SECQTY 320
 ERASE YES PCTFREE 0 SEGSIZE 28 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile WI_PARTICIPANT table
 */
CREATE TABLESPACE TMTSWF3 IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 3200
       SECQTY 320
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile PASSWORD_TRANSACTION table
 */
CREATE TABLESPACE TMTSWF4 IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 32000
       SECQTY 3200
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile PENDING table
 */
CREATE TABLESPACE TMTSWF5 IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 32000
       SECQTY 3200
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile LISTDATA table
 */
CREATE TABLESPACE TMTSWF6 IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 32000
       SECQTY 3200
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Non-volatile SYNCH_POINT table
 */
CREATE TABLESPACE TMTSWF7 IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 3200
       SECQTY 320
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile WORKFLOW_CALLBACK table
 */
CREATE TABLESPACE TMTSWF8 IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 3200
       SECQTY 320
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Non-volatile ACTIVITY table
 */
CREATE TABLESPACE TMTSWF9 IN itimdbTag BUFFERPOOL BP32K
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 32000
       SECQTY 3200
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Non-volatile PROCESS table
 */
CREATE TABLESPACE TMTSWF10 IN itimdbTag BUFFERPOOL BP32K
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 128000
       SECQTY 32000
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile LCR_INPROGRESS_TABLE table
 */
CREATE TABLESPACE TMTSWF11 IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 128000
       SECQTY 32000
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;
 
/** Tablespace for the following table(s):
 --Volatile ACTIVITY_LOCK table (new in 5.0)
 */
CREATE TABLESPACE TMTSWF12 IN itimdbTag BUFFERPOOL BP0
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 128000
       SECQTY 32000
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;

/** Tablespace for the following table(s):
 --Volatile SCHEDULED_MESSAGE table
 */
CREATE TABLESPACE TMTSSC1 IN itimdbTag BUFFERPOOL BP32K
 COMPRESS YES
 USING STOGROUP itimsgTag
       PRIQTY 3200
       SECQTY 320
 ERASE YES PCTFREE 0 SEGSIZE 32 LOCKSIZE ROW CLOSE YES  GBPCACHE ALL;
 
 

/*************************************************
 -- 		Table definitions    
 *************************************************/

CREATE TABLE RESOURCE_PROVIDERS (
  PROVIDER_ID VARCHAR(20) NOT NULL,
  RESOURCE_DN VARCHAR(2000),
  RECON_STATUS SMALLINT,
  LAST_RECON_TIME TIMESTAMP,
  MAX_RECON_DURATION DECIMAL(19,0),
  LOCK_SERVICE SMALLINT,
  REQUEST_ID VARCHAR(20),
  CURRENT_REQUEST_COUNT DECIMAL(19,0),
  MAX_REQUEST_COUNT DECIMAL(19,0),
  LAST_RESPONSE_TIME TIMESTAMP,
  RESOURCE_STATUS SMALLINT,
  RESTART_TIME TIMESTAMP,
  SERVER VARCHAR(255),
  RESOURCE_TEST_STATUS	SMALLINT,
  LAST_TEST_STATUS_TIME	TIMESTAMP,
  CONSTRAINT RES_PROV_PK PRIMARY KEY(PROVIDER_ID)
) IN itimdbTag.TMTS4MD;



CREATE UNIQUE INDEX TIMPMKY1
  ON RESOURCE_PROVIDERS(PROVIDER_ID)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;

CREATE INDEX RESPROVSTATUSX on RESOURCE_PROVIDERS (RESOURCE_STATUS ASC, RESTART_TIME ASC, PROVIDER_ID ASC)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE REMOTE_SERVICES_REQUESTS (
  PROVIDER_ID VARCHAR(20),
  REQUEST_ID VARCHAR(20) NOT NULL,
  TYPE SMALLINT,
  OPERATION SMALLINT,
  REQUEST_TIME TIMESTAMP,
  EXPIRATION_TIME TIMESTAMP,
  TARGET VARCHAR(2000),
  SERVICE_DN VARCHAR(2000) NOT NULL,
  DATA CLOB(10M),
  CONNECTION_POINT BLOB(10M),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT RSVRRQFK FOREIGN KEY (PROVIDER_ID)
    REFERENCES RESOURCE_PROVIDERS (PROVIDER_ID),
  CONSTRAINT REMOTE_SVR_REQ_PK PRIMARY KEY(REQUEST_ID)
) IN itimdbTag.TMTSRR1 VOLATILE;



CREATE UNIQUE INDEX TIMPMKY5
  ON REMOTE_SERVICES_REQUESTS(REQUEST_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;

CREATE INDEX RS_REQ_PID_X ON REMOTE_SERVICES_REQUESTS(PROVIDER_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX RS_REQ_RTIME_X
  ON REMOTE_SERVICES_REQUESTS(REQUEST_TIME)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE LOB TABLESPACE TMTSLOB1 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLOB1 IN itimdbTag.TMTSLOB1
  STORES REMOTE_SERVICES_REQUESTS
  COLUMN DATA;



CREATE UNIQUE INDEX TMLOINX1 ON TMTBLOB1
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE LOB TABLESPACE TMTSLOB2 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLOB2 IN itimdbTag.TMTSLOB2
  STORES REMOTE_SERVICES_REQUESTS
  COLUMN CONNECTION_POINT;



CREATE UNIQUE INDEX TMLOINX2 ON TMTBLOB2
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE TABLE REMOTE_RESOURCES_RECONS (
  PROVIDER_ID VARCHAR(20) NOT NULL,
  RECON_ID DECIMAL(19,0) NOT NULL,
  DAY_OF_MONTH INTEGER,
  MONTH_NUM INTEGER,
  DAY_OF_WEEK INTEGER,
  HOUR_NUM INTEGER,
  MINUTE_NUM INTEGER,
  MAX_DURATION DECIMAL(19,0),
  LOCK_SERVICE SMALLINT DEFAULT 1,
  RECON_NAME VARCHAR(300),
  DESCRIPTION VARCHAR(300),
  CONSTRAINT RRRCNSFK FOREIGN KEY(PROVIDER_ID)
    REFERENCES RESOURCE_PROVIDERS (PROVIDER_ID),
  CONSTRAINT REM_RES_RECONS_PK PRIMARY KEY(PROVIDER_ID, RECON_ID)
) IN itimdbTag.TMTS4MD;



CREATE UNIQUE INDEX TIMPMKY10
  ON REMOTE_RESOURCES_RECONS(PROVIDER_ID, RECON_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE TABLE REMOTE_RESOURCES_RECON_QUERIES (
  PROVIDER_ID VARCHAR(20) NOT NULL,
  RECON_ID DECIMAL(19,0) NOT NULL,
  QUERY_ID DECIMAL(19,0) NOT NULL,
  RECON_FILTER VARCHAR(4000),
  RECON_BASE VARCHAR(4000),
  MAX_DURATION DECIMAL(19,0),
  MAX_ENTRIES DECIMAL(19,0),
  ATTRIBUTES CLOB(10M),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  SUPPORT_DATA_ONLY SMALLINT,
  CONSTRAINT RRQURSFK FOREIGN KEY(PROVIDER_ID, RECON_ID)
    REFERENCES REMOTE_RESOURCES_RECONS
      (PROVIDER_ID, RECON_ID),
  CONSTRAINT REM_REC_QUERIES_PK
    PRIMARY KEY(PROVIDER_ID, RECON_ID, QUERY_ID)
) IN itimdbTag.TMTS32MD;



CREATE UNIQUE INDEX TIMPMKY15
   ON REMOTE_RESOURCES_RECON_QUERIES(PROVIDER_ID, RECON_ID,
    QUERY_ID) USING
  STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE LOB TABLESPACE TMTSLOB3 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLOB3 IN itimdbTag.TMTSLOB3
   STORES REMOTE_RESOURCES_RECON_QUERIES
   COLUMN ATTRIBUTES;



CREATE UNIQUE INDEX TMLOINX3 ON TMTBLOB3
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE TABLE LCR_INPROGRESS_TABLE (
  TENANT VARCHAR(256) NOT NULL,
  RULE_ID DECIMAL(19,0) NOT NULL,
  RULE_OP VARCHAR(256),
  CHILD_ID DECIMAL(19,0),
  START_TIME DECIMAL(19,0),
  ENTITY_ID VARCHAR(256) NOT NULL,
  CONSTRAINT UNIQUE_RULEENTITY PRIMARY KEY(RULE_ID,ENTITY_ID)
) IN itimdbTag.TMTSWF11 VOLATILE;



CREATE UNIQUE INDEX TIMPMKY20
  ON LCR_INPROGRESS_TABLE(RULE_ID,ENTITY_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


--new index added in itimx
CREATE INDEX LCRCHLDX
ON LCR_INPROGRESS_TABLE (CHILD_ID ASC);

CREATE TABLE PO_TOPIC_TABLE  (
  TENANT VARCHAR(256)   NOT NULL,
  TOPIC  VARCHAR(256)   NOT NULL,
  SERVER   VARCHAR(255),
  CHECKPOINT_TIME DECIMAL(19,0),
  TOPIC_ID    DECIMAL(19,0)     NOT NULL,
  CONSTRAINT UNIQUE_TENANTTOPIC PRIMARY KEY(TENANT,TOPIC),
  CONSTRAINT UNIQUE_TOPICID UNIQUE(TOPIC_ID)
) IN itimdbTag.TMTSMISC;



CREATE UNIQUE INDEX TIMPMKY25
  ON PO_TOPIC_TABLE(TENANT,TOPIC)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE UNIQUE INDEX TIMPMKY30
  ON PO_TOPIC_TABLE(TOPIC_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE TABLE PO_NOTIFICATION_TABLE (
  NOTIFICATION_ID   DECIMAL(19,0)  NOT NULL,
  TOPIC_ID     DECIMAL(19,0)    NOT NULL,
  SUBJECT   VARCHAR(2000),
  TEXTBODY     CLOB(100K),
  RECEIVE_TIME  DECIMAL(19,0)     NOT NULL,
  RECIPIENT_EADDR VARCHAR(320)  NOT NULL,
  RECIPIENT_LOCALE   VARCHAR(256),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT TNTTPPFK FOREIGN KEY(TOPIC_ID)
    REFERENCES PO_TOPIC_TABLE (TOPIC_ID) ON DELETE RESTRICT,
  CONSTRAINT NOTIFICATION_ID_PK PRIMARY KEY(NOTIFICATION_ID)
) IN itimdbTag.TMTSMISC;



CREATE UNIQUE INDEX TIMPMKY35
  ON PO_NOTIFICATION_TABLE(NOTIFICATION_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX PO_NOTIFYINDEX
  ON PO_NOTIFICATION_TABLE(TOPIC_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE LOB TABLESPACE TMTSLOB4 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLOB4 IN itimdbTag.TMTSLOB4
  STORES PO_NOTIFICATION_TABLE
  COLUMN TEXTBODY;



CREATE UNIQUE INDEX TMLOINX4 ON TMTBLOB4
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE PO_NOTIFICATION_HTMLBODY_TABLE (
  NOTIFICATION_ID      DECIMAL(19,0) NOT NULL,
  HTMLBODY       CLOB(100K),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT PNHNIDFK FOREIGN KEY(NOTIFICATION_ID)
    REFERENCES PO_NOTIFICATION_TABLE
      (NOTIFICATION_ID) ON DELETE CASCADE,
  CONSTRAINT NOTIFI_ID_HTML_PK PRIMARY KEY(NOTIFICATION_ID)
) IN itimdbTag.TMTSMISC;



CREATE UNIQUE INDEX TIMPMKY40
  ON PO_NOTIFICATION_HTMLBODY_TABLE(NOTIFICATION_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE LOB TABLESPACE TMTSLOB5 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLOB5 IN itimdbTag.TMTSLOB5
  STORES PO_NOTIFICATION_HTMLBODY_TABLE
  COLUMN HTMLBODY;



CREATE UNIQUE INDEX TMLOINX5 ON TMTBLOB5
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE SCHEDULED_MESSAGE  (
  SCHEDULED_TIME DECIMAL(19,0),
  SCHEDULED_MESSAGE_ID DECIMAL(19,0) NOT NULL,
  MESSAGE CLOB(10M),
  SMALL_MESSAGE VARCHAR(4000),
  SERVER VARCHAR(255),
  CHECKPOINT_TIME DECIMAL(19,0),
  REFERENCE_ID DECIMAL(19,0),
  REFERENCE2_ID VARCHAR(50),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT SCHED_MSG_PK PRIMARY KEY( SCHEDULED_MESSAGE_ID)
) IN itimdbTag.TMTSSC1 VOLATILE;



CREATE UNIQUE INDEX TIMPMKY45
  ON SCHEDULED_MESSAGE(SCHEDULED_MESSAGE_ID)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE INDEX SCH_MSG_SVR ON
  SCHEDULED_MESSAGE (SERVER ASC)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX SCH_MSG_TIME_X
  ON SCHEDULED_MESSAGE (SCHEDULED_TIME, SERVER)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX SCH_MSG_CHKPNT_X
  ON SCHEDULED_MESSAGE (CHECKPOINT_TIME)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE INDEX SCH_MSG_REF_X
  ON SCHEDULED_MESSAGE (REFERENCE_ID)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE INDEX SCHEDULED_MSG_X
  ON SCHEDULED_MESSAGE (REFERENCE2_ID ASC)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;




CREATE LOB TABLESPACE TMTSLOB6 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;


CREATE AUXILIARY TABLE TMTBLOB6 IN itimdbTag.TMTSLOB6
  STORES SCHEDULED_MESSAGE
  COLUMN MESSAGE;



CREATE UNIQUE INDEX TMLOINX6 ON TMTBLOB6
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE TABLE NEXTVALUE (
  ID VARCHAR(50) NOT NULL,
  NEXTID INTEGER NOT NULL,
  CONSTRAINT NEXTVALUE_PK PRIMARY KEY(ID)
) IN itimdbTag.TMTS4SM;



CREATE UNIQUE INDEX TIMPMKY50
  ON NEXTVALUE(ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE TABLE PROCESS (
  ROOT_PROCESS_ID DECIMAL(19,0) NOT NULL,
  ID DECIMAL(19,0) NOT NULL,
  PARENT_ID DECIMAL(19,0),
  PARENT_ACTIVITY_ID DECIMAL(19,0),
  NAME VARCHAR(100),
  TYPE VARCHAR(2) NOT NULL,
  DEFINITION_ID VARCHAR(2000) NOT NULL,
  REQUESTER_TYPE VARCHAR(2),
  REQUESTER VARCHAR(2000),
  REQUESTER_NAME VARCHAR(100),
  DESCRIPTION VARCHAR(300),
  PRIORITY INTEGER,
  SCHEDULED VARCHAR(50),
  STARTED VARCHAR(50),
  COMPLETED VARCHAR(50),
  LASTMODIFIED VARCHAR(50),
  SUBMITTED VARCHAR(50),
  STATE VARCHAR(1),
  NOTIFY INTEGER,
  REQUESTEE VARCHAR(2000),
  REQUESTEE_NAME VARCHAR(100),
  SUBJECT VARCHAR(2000),
  SUBJECT_PROFILE VARCHAR(100),
  SUBJECT_SERVICE VARCHAR(100),
  SUBJECT_ACCESS_ID VARCHAR(2000),
  SUBJECT_ACCESS_NAME VARCHAR(100),
  COMMENTS VARCHAR(200),
  RESULT_SUMMARY VARCHAR(2),
  RESULT_DETAIL CLOB(10M),
  SHORT_DETAIL VARCHAR(4000),
  TENANT VARCHAR(2000),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT PROCESS_PK PRIMARY KEY(ID)
) IN itimdbTag.TMTSWF10;



CREATE UNIQUE INDEX TIMPMKY55 ON
  PROCESS(ID)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE INDEX PROCESS_STATE_X ON
  PROCESS (STATE ASC)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE INDEX PROCESS_PID_X
  ON PROCESS (PARENT_ID ASC)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE INDEX PROCESS_VPC1_X ON PROCESS
  (PARENT_ID ASC, SUBMITTED DESC, ID DESC, STATE ASC)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE INDEX PROCESS_SUB_X ON
  PROCESS (SUBMITTED DESC, PARENT_ID ASC)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE INDEX PROCESS_ID_ST ON
  PROCESS (ID ASC, STATE ASC)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;




CREATE LOB TABLESPACE TMTSLOB7 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;


CREATE AUXILIARY TABLE TMTBLOB7 IN itimdbTag.TMTSLOB7
  STORES PROCESS
  COLUMN RESULT_DETAIL;



CREATE UNIQUE INDEX TMLOINX7 ON TMTBLOB7 USING
  STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE TABLE ACTIVITY (
  ID DECIMAL(19,0) NOT NULL,
  PROCESS_ID DECIMAL(19,0) NOT NULL,
  DEFINITION_ID VARCHAR(100) NOT NULL,
  ACTIVITY_INDEX INTEGER,
  LOOP_COUNT INTEGER,
  LOOP_RUNCOUNT INTEGER,
  RETRY_COUNT INTEGER,
  LOCK_COUNT INTEGER,
  SUBPROCESS_ID DECIMAL(19,0),
  NAME VARCHAR(100),
  DESCRIPTION VARCHAR(300),
  TYPE VARCHAR(1),
  SUBTYPE VARCHAR(2),
  PRIORITY INTEGER,
  STARTED VARCHAR(50),
  COMPLETED VARCHAR(50),
  LASTMODIFIED VARCHAR(50),
  STATE VARCHAR(1),
  RESULT_SUMMARY VARCHAR(5),
  RESULT_DETAIL CLOB(10M),
  SHORT_DETAIL VARCHAR(4000),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT ACTPIDFK FOREIGN KEY(PROCESS_ID)
  REFERENCES PROCESS (ID),
  CONSTRAINT ACTIVITY_PK PRIMARY KEY(ID)
) IN itimdbTag.TMTSWF9;



CREATE UNIQUE INDEX TIMPMKY60 ON
  ACTIVITY (PROCESS_ID, DEFINITION_ID,
   ACTIVITY_INDEX)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 100000 SECQTY 10000;


CREATE UNIQUE INDEX TIMPMKY65 ON
  ACTIVITY (ID ASC)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 100000 SECQTY 10000;


CREATE INDEX ACTIVITY_PID_X
  ON ACTIVITY (PROCESS_ID DESC)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE INDEX ACTIVITY_STATE_X
  ON ACTIVITY (STATE DESC)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE INDEX ACTIVITY_ST_PID
ON ACTIVITY (PROCESS_ID ASC,STATE ASC) BUFFERPOOL BP0
USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE LOB TABLESPACE TMTSLOB8 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLOB8 IN itimdbTag.TMTSLOB8
  STORES ACTIVITY
  COLUMN RESULT_DETAIL;



CREATE UNIQUE INDEX TMLOINX8 ON TMTBLOB8
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE PROCESSDATA (
  PROCESS_ID DECIMAL(19,0) NOT NULL,
  DEF_ID VARCHAR(100) NOT NULL,
  NAME VARCHAR(100),
  CONTEXT VARCHAR(100),
  DESCRIPTION VARCHAR(300),
  TYPE VARCHAR(500),
  COLLECTION_TYPE VARCHAR(500),
  VALUE CLOB(10M),
  SMALL_VALUE VARCHAR(4000),
  VALUE_LAST_MODIFIED DECIMAL(19,0),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT PRDPIDFK FOREIGN KEY(PROCESS_ID)
    REFERENCES PROCESS (ID),
  CONSTRAINT PROCESSDATA_PK PRIMARY KEY(PROCESS_ID,DEF_ID)
) IN itimdbTag.TMTSWF1 VOLATILE;




CREATE LOB TABLESPACE TMTSLOB9 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLOB9 IN itimdbTag.TMTSLOB9
  STORES PROCESSDATA
  COLUMN VALUE;



CREATE INDEX PROCESSDATA_ID_DEF
ON PROCESSDATA (PROCESS_ID ASC, DEF_ID ASC,
VALUE_LAST_MODIFIED ASC)
BUFFERPOOL BP0
USING STOGROUP itimsgTag PRIQTY 100000 SECQTY 10000;



CREATE UNIQUE INDEX TMLOINX9 ON TMTBLOB9
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE UNIQUE INDEX TIMPMKY70 ON
  PROCESSDATA (PROCESS_ID DESC, DEF_ID DESC)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE PROCESSLOG (
  ID DECIMAL(19,0) NOT NULL,
  PROCESS_ID DECIMAL(19,0),
  ACTIVITY_ID DECIMAL(19,0),
  CREATED VARCHAR(50),
  EVENTTYPE VARCHAR(2) NOT NULL,
  OLD_PARTICIPANT_TYPE VARCHAR(2),
  OLD_PARTICIPANT_ID VARCHAR(2000),
  NEW_PARTICIPANT_TYPE VARCHAR(2),
  NEW_PARTICIPANT_ID VARCHAR(2000),
  REQUESTOR_TYPE VARCHAR(2),
  REQUESTOR VARCHAR(2000),
  OLD_STATE VARCHAR(1),
  NEW_STATE VARCHAR(1),
  DATA_ID VARCHAR(100),
  NEW_DATA CLOB(10M),
  SMALL_NEW_DATA VARCHAR(4000),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT PRLPIDFK FOREIGN KEY(PROCESS_ID)
    REFERENCES PROCESS (ID),
  CONSTRAINT PROCESSLOG_PK PRIMARY KEY(ID)
) IN itimdbTag.TMTS32LG;



CREATE UNIQUE INDEX TIMPMKY75
  ON PROCESSLOG(ID)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;




CREATE LOB TABLESPACE TMTSLO10 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLO10 IN itimdbTag.TMTSLO10
  STORES PROCESSLOG
  COLUMN NEW_DATA;



CREATE UNIQUE INDEX TMLONX10 ON TMTBLO10
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE WORKITEM (
  ID DECIMAL(19,0) NOT NULL,
  PROCESS_ID DECIMAL(19,0) NOT NULL,
  ACTIVITY_ID DECIMAL(19,0) NOT NULL,
  CREATED VARCHAR(50),
  INPUT_PARAMETERS CLOB(10M),
  DUE_DATE DECIMAL(19,0),
  LOCK_OWNER VARCHAR(512),
  DESCRIPTION VARCHAR(4000),
  PROCESS_DEFINITION_ID VARCHAR(512) NOT NULL,
  ACTIVITY_DEFINITION_ID VARCHAR(100) NOT NULL,
  ACTIVITY_TYPE VARCHAR(1),
  ACTIVITY_SUBTYPE VARCHAR(2),
  ACTIVITY_NAME VARCHAR(100),
  REQUESTEE_NAME VARCHAR(100),
  REQUESTER_NAME VARCHAR(100),
  SUBJECT VARCHAR(2000),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT WRIPIFK2 FOREIGN KEY(ACTIVITY_ID)
    REFERENCES ACTIVITY (ID),
  CONSTRAINT WRIPIDFK FOREIGN KEY(PROCESS_ID)
    REFERENCES PROCESS (ID),
  CONSTRAINT WORKITEM_PK PRIMARY KEY(ID)
) IN itimdbTag.TMTSWF2 VOLATILE;



CREATE UNIQUE INDEX TIMPMKY80 ON
  WORKITEM(ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX WORKITEM_PID_X ON
  WORKITEM(PROCESS_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX WORKITEM_AID_X ON
  WORKITEM (ACTIVITY_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX WORKITEM_ADEF_X ON
  WORKITEM(PROCESS_DEFINITION_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX WORKITEM_PDEF_X ON
  WORKITEM (ACTIVITY_DEFINITION_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE LOB TABLESPACE TMTSLO11 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;


CREATE AUXILIARY TABLE TMTBLO11 IN itimdbTag.TMTSLO11
  STORES WORKITEM
  COLUMN INPUT_PARAMETERS;



CREATE UNIQUE INDEX TMLONX11 ON TMTBLO11
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE WI_PARTICIPANT (
  ID DECIMAL(19,0) NOT NULL,
  WORKITEM_ID DECIMAL(19,0) NOT NULL,
  PARTICIPANT_TYPE VARCHAR(2) NOT NULL,
  PARTICIPANT VARCHAR(512) NOT NULL,
  CONSTRAINT WIPWIDFK FOREIGN KEY(WORKITEM_ID)
  REFERENCES WORKITEM (ID) ON DELETE CASCADE,
  CONSTRAINT PARTICIPANT_PK PRIMARY KEY(ID)
) IN itimdbTag.TMTSWF3 VOLATILE;



CREATE UNIQUE INDEX TIMPMKY85
  ON WI_PARTICIPANT(ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX WIPART_WIID_X ON
  WI_PARTICIPANT (WORKITEM_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX WIPART_DN_X ON
  WI_PARTICIPANT (PARTICIPANT);



CREATE TABLE SYNCH_POINT (
  PROCESS_ID DECIMAL(19,0) NOT NULL,
  DEFINITION_ID VARCHAR(100) NOT NULL,
  ACTIVITY_INDEX INTEGER NOT NULL,
  WAIT_LOCK INTEGER NOT NULL,
  JOIN_ENABLED SMALLINT NOT NULL,
  CONSTRAINT SYNCH_POINT_PK PRIMARY KEY(PROCESS_ID, DEFINITION_ID,
  ACTIVITY_INDEX)
) IN itimdbTag.TMTSWF4;



CREATE UNIQUE INDEX TIMPMKY90
  ON SYNCH_POINT(PROCESS_ID,
    DEFINITION_ID, ACTIVITY_INDEX)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;

CREATE INDEX SYNCH_POINT_PID_X ON SYNCH_POINT (PROCESS_ID DESC);

CREATE TABLE ACTIVITY_LOCK (
  PROCESS_ID DECIMAL(19,0) NOT NULL,
  ACTIVITY_ID DECIMAL(19,0) NOT NULL,
  SERVER VARCHAR(255) NOT NULL,
  THREAD_ID DECIMAL(19,0) NOT NULL,
  LOCK_COUNT INTEGER,
  CONSTRAINT ACTIVITY_LOCK_PK PRIMARY KEY(PROCESS_ID, ACTIVITY_ID, SERVER, THREAD_ID),
  CONSTRAINT ACTIVITY_LOCK_PFK FOREIGN KEY(PROCESS_ID) REFERENCES PROCESS(ID),
  CONSTRAINT ACTIVITY_LOCK_AFK FOREIGN KEY(ACTIVITY_ID) REFERENCES ACTIVITY(ID) 
) IN itimdbTag.TMTSWF12 VOLATILE;

CREATE UNIQUE INDEX TIMPMKY220
  ON ACTIVITY_LOCK(PROCESS_ID, ACTIVITY_ID, SERVER, THREAD_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE PASSWORD_TRANSACTION (
  TRANSACTION_ID DECIMAL(19,0) NOT NULL,
  ACCOUNT_DN VARCHAR(2000),
  CREATION_DATE VARCHAR(50),
  PROCESS_ID DECIMAL(19,0) NOT NULL,
  ACTIVITY_ID DECIMAL(19,0) NOT NULL,
  PASSWORD VARCHAR(500),
  CONSTRAINT PWD_TRANS_PK PRIMARY KEY(TRANSACTION_ID)
) IN itimdbTag.TMTSWF4 VOLATILE;



CREATE UNIQUE INDEX TIMPMKY95
  ON PASSWORD_TRANSACTION(TRANSACTION_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE PENDING (
  PROCESS_ID DECIMAL(19,0) NOT NULL,
  PERSON_DN VARCHAR(255),
  SERVICE_DN VARCHAR(2000),
  CONSTRAINT PENPIDFK FOREIGN KEY(PROCESS_ID)
  REFERENCES PROCESS (ID),
  CONSTRAINT PENDING_PK PRIMARY KEY(PROCESS_ID)
) IN itimdbTag.TMTSWF5 VOLATILE;



CREATE UNIQUE INDEX TIMPMKY100
  ON PENDING(PROCESS_ID)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX PENDING_FOR_PERSON ON
  PENDING (PERSON_DN)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE LISTDATA
(
  DATA_ID  DECIMAL(19,0) NOT NULL,
  INDEX_ID  INT NOT NULL,
  VALUE CLOB(10M),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT LISTDATA_PK PRIMARY KEY(DATA_ID, INDEX_ID)
) IN itimdbTag.TMTSWF6 VOLATILE;



CREATE UNIQUE INDEX TIMPMKY105
  ON LISTDATA(DATA_ID, INDEX_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE LOB TABLESPACE TMTSLO12 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLO12 IN itimdbTag.TMTSLO12
  STORES LISTDATA
  COLUMN VALUE;



CREATE UNIQUE INDEX TMLONX12 ON TMTBLO12
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE REPORT (
  ID INT NOT NULL,
  TITLE VARCHAR(255) NOT NULL,
  TYPE VARCHAR(255) NOT NULL,
  AUTHOR VARCHAR(255),
  REPORT_SIZE INT,
  REPORT_DATA BLOB(10M),
  STYLESHEET_NAME VARCHAR(255),
  EDITABLE CHAR(1),
  REPORTCATEGORY VARCHAR(255) NOT NULL,
  REPORTSUBTYPE VARCHAR(255) NOT NULL,
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT REPORT_P PRIMARY KEY (ID)
) IN itimdbTag.TMTSRPT;



CREATE UNIQUE INDEX TIMPMKY110 ON
  REPORT(ID)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE LOB TABLESPACE TMTSLO13 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLO13 IN itimdbTag.TMTSLO13
  STORES REPORT
  COLUMN REPORT_DATA;



CREATE UNIQUE INDEX TMLONX13 ON TMTBLO13
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE ENTITY_COLUMN (
  ENTITY_NAME VARCHAR(255) NOT NULL,
  COLUMN_NAME VARCHAR(255) NOT NULL,
  ATTRIBUTE_NAME VARCHAR(255) NOT NULL,
  MULTI_VALUED CHAR(1),
  IMPLICITLY_MAPPED CHAR(1),
  AVAILABLE_FOR_REPORTING VARCHAR(255),
  TABLE_NAME VARCHAR(255),
  CONSTRAINT ENTITY_COLUMNP PRIMARY KEY (ENTITY_NAME, ATTRIBUTE_NAME)
) IN itimdbTag.TMTSRPT;



CREATE UNIQUE INDEX TIMPMKY115 ON
  ENTITY_COLUMN(ENTITY_NAME, ATTRIBUTE_NAME)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE COLUMN_REPORT (
  ENTITY_NAME VARCHAR(255) NOT NULL,
  COLUMN_NAME VARCHAR(255) NOT NULL,
  REPORT_ID INT NOT NULL,
  CONSTRAINT COLUMN_REPORT_P
  PRIMARY KEY (REPORT_ID, ENTITY_NAME, COLUMN_NAME)
) IN itimdbTag.TMTSRPT;



CREATE UNIQUE INDEX TIMPMKY120 ON
  COLUMN_REPORT(REPORT_ID, ENTITY_NAME, COLUMN_NAME)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE AUTHORIZATION_OWNERS (
  USERDN VARCHAR(255) NOT NULL,
  CONTAINERDN VARCHAR(255) NOT NULL,
  CONSTRAINT AUTH_OWNERS_P PRIMARY KEY(USERDN, CONTAINERDN)
) IN itimdbTag.TMTSRPT;



CREATE UNIQUE INDEX TIMPMKY125
  ON AUTHORIZATION_OWNERS(USERDN, CONTAINERDN)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE ACI (
  DN VARCHAR(255) NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  SCOPE VARCHAR(255),
  TARGET VARCHAR(255) NOT NULL,
  PARENT VARCHAR(255),
  CATEGORY VARCHAR(255),
  OBJECTFILTER VARCHAR(1023),
  CONSTRAINT ACI_P PRIMARY KEY(DN, NAME, TARGET)
) IN itimdbTag.TMTSRPT;



CREATE UNIQUE INDEX TIMPMKY130
  ON ACI(DN, NAME, TARGET)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE ACI_ROLEDNS (
  DN VARCHAR(255) NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  TARGET VARCHAR(255) NOT NULL,
  ROLEDN VARCHAR(255) NOT NULL
) IN itimdbTag.TMTSRPT;



CREATE TABLE ACI_PRINCIPALS (
  DN VARCHAR(255) NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  TARGET VARCHAR(255) NOT NULL,
  PRINCIPALNAME VARCHAR(255) NOT NULL
) IN itimdbTag.TMTSRPT;



CREATE TABLE ACI_PERMISSION_ATTRIBUTERIGHT (
  DN VARCHAR(255) NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  TARGET VARCHAR(255) NOT NULL,
  ACTION VARCHAR(6) NOT NULL,
  OPERATION VARCHAR(3) NOT NULL,
  ATTRIBUTERIGHT VARCHAR(255) NOT NULL
) IN itimdbTag.TMTSRPT;



CREATE TABLE ACI_PERMISSION_CLASSRIGHT (
  DN VARCHAR(255) NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  TARGET VARCHAR(255) NOT NULL,
  ACTION VARCHAR(6) NOT NULL,
  CLASSRIGHT VARCHAR(255) NOT NULL
) IN itimdbTag.TMTSRPT;



CREATE TABLE ENTITLEMENT (
  DN VARCHAR(255) NOT NULL,
  TYPE VARCHAR(255) NOT NULL,
  SERVICETARGETTYPE VARCHAR(255),
  SERVICETARGETNAME VARCHAR(255),
  PROCESSDN VARCHAR(255)
) IN itimdbTag.TMTSRPT;



CREATE TABLE ENTITLEMENT_PROVISIONINGPARAMS (
  DN VARCHAR(255) NOT NULL,
  ATTRIBUTEVALUE VARCHAR(4000) NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  ENFORCEMENT VARCHAR(255),
  EXPRTYPE VARCHAR(255),
  SERVICETARGETNAME VARCHAR(255),
  SERVICE_DN VARCHAR(255)
) IN itimdbTag.TMTS32SM;



CREATE TABLE SYNCHRONIZATION_HISTORY (
  SYNC_ID DECIMAL(19,0)  NOT NULL ,
  REQUESTOR VARCHAR (255) NOT NULL,
  REQ_TYPE VARCHAR (255),
  REQ_NAME VARCHAR (255),
  STATUS VARCHAR (255),
  TENANT VARCHAR (255),
  STATUS_DETAIL VARCHAR (255),
  SCHEDULED_TIME DECIMAL(19,0),
  SUBMITTED_TIME DECIMAL(19,0),
  STARTED_TIME DECIMAL(19,0) NOT NULL,
  COMPLETED_TIME DECIMAL(19,0),
  SERVER_NAME VARCHAR (255),
  CONSTRAINT SYNCH_HISTORY_P PRIMARY KEY (SYNC_ID, STARTED_TIME)
) IN itimdbTag.TMTSRPT;



CREATE UNIQUE INDEX TIMPMKY135
  ON SYNCHRONIZATION_HISTORY(SYNC_ID, STARTED_TIME)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE SYNCHRONIZATION_LOCK (
  HOST VARCHAR (255) NOT NULL,
  CONSTRAINT SYNCH_LOCK_P PRIMARY KEY (HOST)
) IN itimdbTag.TMTSRPT;



CREATE UNIQUE INDEX TIMPMKY140
  ON SYNCHRONIZATION_LOCK(HOST)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE RESOURCES_SYNCHRONIZATIONS (
  SYNC_ID DECIMAL(19,0)  NOT NULL,
  DAY_OF_MONTH INTEGER  NOT NULL,
  MONTH_NUM INTEGER  NOT NULL,
  DAY_OF_WEEK INTEGER  NOT NULL,
  HOUR_NUM INTEGER  NOT NULL,
  MINUTE_NUM INTEGER  NOT NULL,
  MAX_DURATION DECIMAL(19,0),
  CONSTRAINT RESOURCES_SYNCH_P PRIMARY KEY (SYNC_ID)
) IN itimdbTag.TMTSRPT;



CREATE UNIQUE INDEX TIMPMKY145
  ON RESOURCES_SYNCHRONIZATIONS(SYNC_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE TABLE CHANGELOG (
  CHANGE_NUMBER INTEGER NOT NULL
) IN itimdbTag.TMTSRPT;

CREATE TABLE SERVICE_ACCOUNT_MAPPING (
  SERVICEPROFILE VARCHAR (255) NOT NULL,
  ACCOUNTPROFILE VARCHAR (255) NOT NULL,
  PRIMARY KEY (SERVICEPROFILE, ACCOUNTPROFILE)
)IN itimdbTag.TMTSMISC;

CREATE UNIQUE INDEX TIMPMKY210
  ON SERVICE_ACCOUNT_MAPPING(SERVICEPROFILE, ACCOUNTPROFILE)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE RECONCILIATION (
  RECONID VARCHAR(255) NOT NULL,
  SERVICEDN VARCHAR(2000) NOT NULL,
  PROCESSEDACCOUNTS INTEGER NOT NULL,
  LOCALACCOUNTS INTEGER NOT NULL,
  TIMUSERACCOUNTS INTEGER NOT NULL,
  POLICYVIOLATIONS INTEGER NOT NULL,
  STARTED TIMESTAMP NOT NULL,
  COMPLETED TIMESTAMP NOT NULL,
  ACTIVITY_ID DECIMAL(19,0) NOT NULL,
  CONSTRAINT RECONCILIATION_P PRIMARY KEY (RECONID)
) IN itimdbTag.TMTS4LG;



CREATE UNIQUE INDEX TIMPMKY150 ON
  RECONCILIATION(RECONID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE RECONCILIATION_INFO (
  RECONID VARCHAR(255) NOT NULL,
  ACCOUNTID VARCHAR(255),
  POLICYCOMPLIANCESTATUS VARCHAR(20),
  USERNAME VARCHAR(255),
  OPERATION VARCHAR(20),
  REMARKS VARCHAR(1000),
  HANDLE DECIMAL(19,0),
  CONSTRAINT REIRIDFK FOREIGN KEY (RECONID)
    REFERENCES RECONCILIATION (RECONID)
) IN itimdbTag.TMTS4LG;



CREATE TABLE AUTH_KEY (
  Y VARCHAR(2000) NOT NULL,
  P VARCHAR(2000) NOT NULL,
  Q VARCHAR(2000) NOT NULL,
  G VARCHAR(2000) NOT NULL,
  X VARCHAR(2000) NOT NULL
) IN itimdbTag.TMTS32SM;



CREATE TABLE WORKFLOW_CALLBACK (
  ID DECIMAL(19,0) NOT NULL,
  PROCESS_ID DECIMAL(19,0) NOT NULL,
  MESSAGE_OBJECT VARCHAR(2000) NOT NULL,
  EVENT_TRIGGER  CHAR(1),
  CONSTRAINT WFCPIDFK FOREIGN KEY(PROCESS_ID)
    REFERENCES PROCESS (ID),
  CONSTRAINT WF_CALLBACK_PK PRIMARY KEY(ID)
) IN itimdbTag.TMTSWF8 VOLATILE;



CREATE UNIQUE INDEX TIMPMKY155
  ON WORKFLOW_CALLBACK(ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


--new index added in itimx
CREATE INDEX WFCLBKPIDX
ON WORKFLOW_CALLBACK (PROCESS_ID ASC);

CREATE TABLE POLICY_ANALYSIS (
  ANALYSIS_ID VARCHAR(32) NOT NULL,
  TENANT_NAME VARCHAR(64),
  STATUS INTEGER NOT NULL,
  REASON INTEGER NOT NULL,
  CONTEXT INTEGER NOT NULL,
  CHANGE_TYPE INTEGER NOT NULL,
  LAST_ACCESSED TIMESTAMP NOT NULL,
  WORKERS_STARTED INTEGER DEFAULT 0 NOT NULL,
  WORKERS_COMPLETED INTEGER DEFAULT 0 NOT NULL,
  WORKERS_TOTAL INTEGER DEFAULT 0 NOT NULL,
  ACCOUNTS_EVALUATED INTEGER DEFAULT 0 NOT NULL,
  CONSTRAINT PK_POLICY_ANALYSIS PRIMARY KEY(ANALYSIS_ID)
) IN itimdbTag.TMTSPOL5;



CREATE UNIQUE INDEX TIMPMKY160
  ON POLICY_ANALYSIS(ANALYSIS_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE ACCT_CHANGE (
  CHANGE_ID VARCHAR(32) NOT NULL,
  ACCT_UID VARCHAR(60) NOT NULL,
  ACCT_IDENTIFIER VARCHAR(255) NOT NULL,
  SERVICE_NAME VARCHAR(200) NOT NULL,
  SERVICE_IDENTIFIER VARCHAR(255) NOT NULL,
  OWNER_NAME VARCHAR(200) NOT NULL,
  OWNER_IDENTIFIER VARCHAR(255) NOT NULL,
  OPERATION_TYPE INTEGER NOT NULL,
  PROVISION_PRIORITY INTEGER,
  SEQUENCE_NR INTEGER,
  REASON INTEGER NOT NULL,
  REVOKE_CHANGE INTEGER NOT NULL,
  STATUS SMALLINT,
  POLICY_ANALYSIS_ID VARCHAR(32) NOT NULL,
  CONSTRAINT ACCPAIFK FOREIGN KEY(POLICY_ANALYSIS_ID)
    REFERENCES POLICY_ANALYSIS (ANALYSIS_ID)
      ON DELETE CASCADE,
  CONSTRAINT PK_ACCT_CHANGE PRIMARY KEY(POLICY_ANALYSIS_ID, CHANGE_ID)
  ) IN itimdbTag.TMTSPOL1 VOLATILE;



CREATE UNIQUE INDEX TIMPMKY165
  ON ACCT_CHANGE(POLICY_ANALYSIS_ID, CHANGE_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE ATTR_CHANGE (
  CHANGE_ID VARCHAR(32) NOT NULL,
  ATTR_NAME VARCHAR(100) NOT NULL,
  ATTR_VALUE VARCHAR(2000),
  OPERATION_TYPE INTEGER NOT NULL,
  PRIVILEGE_ACTION_TYPE INTEGER NOT NULL,
  ATTR_VALUE_PRESENCE INTEGER NOT NULL,
  POLICY_ANALYSIS_ID VARCHAR(32) NOT NULL,
  ACCT_CHANGE_ID VARCHAR(32) NOT NULL,
  CONSTRAINT ATCPAIFK FOREIGN KEY(POLICY_ANALYSIS_ID, ACCT_CHANGE_ID)
   REFERENCES ACCT_CHANGE (POLICY_ANALYSIS_ID, CHANGE_ID)
     ON DELETE CASCADE,
  CONSTRAINT PK_ATTR_CHANGE PRIMARY KEY(POLICY_ANALYSIS_ID,
   ACCT_CHANGE_ID, CHANGE_ID)
) IN itimdbTag.TMTSPOL2 VOLATILE;



CREATE UNIQUE INDEX TIMPMKY170
  ON ATTR_CHANGE(POLICY_ANALYSIS_ID,
    ACCT_CHANGE_ID, CHANGE_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE POLICY_ANALYSIS_ERROR (
  ERROR_ID VARCHAR(32) NOT NULL,
  ENTITY_NAME VARCHAR(100),
  ENTITY_IDENTIFIER VARCHAR(255),
  ENTITY_TYPE  INTEGER,
  SERVICE_NAME VARCHAR(200),
  SERVICE_IDENTIFIER VARCHAR(255),
  PERSON_NAME  VARCHAR(200),
  PERSON_IDENTIFIER VARCHAR(255),
  POLICY_NAME VARCHAR(100),
  POLICY_IDENTIFIER VARCHAR(255),
  ATTR_NAME VARCHAR(100),
  ERROR_TYPE INTEGER NOT NULL,
  ENTITY_ERROR_TYPE  INTEGER,
  ERROR_MESSAGE CLOB(100K) NOT NULL,
  POLICY_ANALYSIS_ID VARCHAR(32) NOT NULL,
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT PAEPAIFK FOREIGN KEY(POLICY_ANALYSIS_ID)
    REFERENCES POLICY_ANALYSIS (ANALYSIS_ID)
      ON DELETE CASCADE,
  CONSTRAINT PK_ANALYSIS_ERROR PRIMARY KEY(ERROR_ID)
) IN itimdbTag.TMTSPOL3 VOLATILE;



CREATE UNIQUE INDEX TIMPMKY175
  ON POLICY_ANALYSIS_ERROR(ERROR_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE LOB TABLESPACE TMTSLO14 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLO14 IN itimdbTag.TMTSLO14
  STORES POLICY_ANALYSIS_ERROR
  COLUMN ERROR_MESSAGE;



CREATE UNIQUE INDEX TMLONX14 ON TMTBLO14
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE COMPLIANCE_ALERT (
  CA_PROC_ID  DECIMAL(19,0),
  CA_ISSUE_DN VARCHAR(512) NOT NULL,
  ACTIVITY_ID   DECIMAL(19,0),
  ACCOUNT_DN VARCHAR(512) NOT NULL,
  PARTICIPANT_DN  VARCHAR(512),
  STARTED  CHAR(1),
  CONSTRAINT PK_CA PRIMARY KEY(CA_ISSUE_DN)
) IN itimdbTag.TMTSPOL4 VOLATILE;



CREATE UNIQUE INDEX TIMPMKY180
  ON COMPLIANCE_ALERT(CA_ISSUE_DN)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX CA_PID_X ON
  COMPLIANCE_ALERT(CA_PROC_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX CA_ACCDN_X ON
  COMPLIANCE_ALERT(ACCOUNT_DN)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX CA_ACTID_X ON
  COMPLIANCE_ALERT(ACTIVITY_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE AUDIT_EVENT (
  ID DECIMAL(19,0) NOT NULL,
  ITIM_EVENT_CATEGORY VARCHAR(50) NOT NULL,
  ENTITY_NAME VARCHAR(1000),
  ENTITY_DN VARCHAR(1000),
  ENTITY_TYPE VARCHAR(50),
  ACTION VARCHAR(25) NOT NULL,
  WORKFLOW_PROCESS_ID DECIMAL(19,0),
  INITIATOR_NAME VARCHAR(1000),
  INITIATOR_DN VARCHAR(1000),
  CONTAINER_NAME VARCHAR(1000),
  CONTAINER_DN VARCHAR(1000),
  RESULT_SUMMARY VARCHAR(25),
  TIMESTAMP VARCHAR(50) NOT NULL,
  COMMENTS VARCHAR(1000),
  CONSTRAINT AUDIT_EVENT_PK PRIMARY KEY(ID)
) IN itimdbTag.TMTS32LG;

CREATE INDEX AUDIT_REPORT1 ON AUDIT_EVENT (TIMESTAMP ASC, ITIM_EVENT_CATEGORY ASC) USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;

CREATE UNIQUE INDEX TIMPMKY185 ON
  AUDIT_EVENT(ID)
  BUFFERPOOL BP0
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE AUDIT_MGMT_TARGET (
  EVENT_ID DECIMAL(19,0) NOT NULL,
  TARGET_ENTITY_NAME VARCHAR(1000),
  TARGET_ENTITY_DN VARCHAR(1000),
  TARGET_ENTITY_TYPE VARCHAR(50),
  CONSTRAINT AMTEIDFK FOREIGN KEY(EVENT_ID)
  REFERENCES AUDIT_EVENT (ID)
) IN itimdbTag.TMTS32LG;



CREATE TABLE AUDIT_MGMT_PROVISIONING (
  EVENT_ID DECIMAL(19,0) NOT NULL,
  OWNER_NAME VARCHAR(1000),
  OWNER_DN VARCHAR(1000),
  SERVICE_NAME VARCHAR(1000) NOT NULL,
  SERVICE_DN VARCHAR(1000) NOT NULL,
  access_name VARCHAR (1000), 
  access_dn VARCHAR (1000),
  CONSTRAINT AMPEIDFK FOREIGN KEY(EVENT_ID)
  REFERENCES AUDIT_EVENT (ID)
) IN itimdbTag.TMTS32LG;



CREATE TABLE AUDIT_MGMT_DELEGATE (
  EVENT_ID DECIMAL(19,0) NOT NULL,
  DELEGATE_NAME VARCHAR(1000),
  DELEGATE_DN VARCHAR(1000),
  DELEGATE_START_TIME VARCHAR(1000),
  DELEGATE_END_TIME VARCHAR(1000),
  CONSTRAINT AMDEIDFK FOREIGN KEY(EVENT_ID)
  REFERENCES AUDIT_EVENT (ID)
) IN itimdbTag.TMTS32LG;



CREATE TABLE I18NMESSAGES (
  PROFILE VARCHAR(256),
  NAME VARCHAR(256) NOT NULL,
  MESSAGEKEY VARCHAR(256) NOT NULL,
  MESSAGE VARCHAR(2000)
) IN itimdbTag.TMTS4MD;



CREATE TABLE BULK_DATA_SERVICE (
  ID DECIMAL(19,0) NOT NULL,
  STARTTIME TIMESTAMP,
  ENDTIME TIMESTAMP,
  MIMETYPE VARCHAR(50),
  NAME VARCHAR(50),
  DATA BLOB(50M),
  FILENAME VARCHAR(255),
  FILESIZE INTEGER,
  DESCNAME VARCHAR(255),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT BULK_DATA_SRC_PK PRIMARY KEY(ID)
) IN itimdbTag.TMTSMISC;



CREATE UNIQUE INDEX TIMPMKY190
  ON BULK_DATA_SERVICE(ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE LOB TABLESPACE TMTSLO15 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLO15 IN itimdbTag.TMTSLO15
  STORES BULK_DATA_SERVICE
  COLUMN DATA;



CREATE UNIQUE INDEX TMLONX15 ON TMTBLO15
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE BULK_DATA_STORE (
  ID DECIMAL(19,0) NOT NULL,
  SERVICEID DECIMAL(19,0) NOT NULL,
  XML BLOB(1M),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  CONSTRAINT BDSSIDFK FOREIGN KEY (SERVICEID)
  REFERENCES BULK_DATA_SERVICE (ID) ON DELETE CASCADE,
  CONSTRAINT BULK_DATA_STORE_PK PRIMARY KEY(ID)
) IN itimdbTag.TMTSMISC;



CREATE UNIQUE INDEX TIMPMKY195
  ON BULK_DATA_STORE(ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX BDS_SID ON
  BULK_DATA_STORE (SERVICEID DESC)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;



CREATE LOB TABLESPACE TMTSLO16 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLO16 IN itimdbTag.TMTSLO16
  STORES BULK_DATA_STORE
  COLUMN XML;



CREATE UNIQUE INDEX TMLONX16 ON TMTBLO16
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE BULK_DATA_INDEX (
  ID DECIMAL(19,0) NOT NULL,
  STOREID DECIMAL(19,0) NOT NULL,
  DATAOBJECTID VARCHAR(10),
  CONSTRAINT BKISIDFK FOREIGN KEY (STOREID)
  REFERENCES BULK_DATA_STORE (ID) ON DELETE CASCADE,
  CONSTRAINT BULK_DATA_INDEX_PK PRIMARY KEY(ID)
) IN itimdbTag.TMTSMISC;



CREATE UNIQUE INDEX TIMPMKY200
  ON BULK_DATA_INDEX(ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX BDI_SID ON
  BULK_DATA_INDEX (STOREID DESC)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE INDEX BDI_DOID ON
  BULK_DATA_INDEX (DATAOBJECTID DESC)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE MIGRATION_STATUS (
  ID DECIMAL(19,0) NOT NULL,
  PROCESSCOUNT INTEGER,
  PROCESSSTATUS VARCHAR(50),
  SERVICEID DECIMAL(19,0),
  CONSTRAINT MIG_STATUS_PK PRIMARY KEY(ID)
) IN itimdbTag.TMTSMISC;



CREATE UNIQUE INDEX TIMPMKY205
  ON MIGRATION_STATUS(ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;

CREATE TABLE RECERTIFICATIONLOG (
  PROCESS_ID DECIMAL(19,0) NOT NULL,
  ACTIVITY_ID DECIMAL(19,0) NOT NULL,
  ENTITY_DN VARCHAR(255),
  ACCESS_DN VARCHAR(255),
  ACCOUNT_ID VARCHAR(100),
  ACCOUNT_OWNER_NAME VARCHAR(100),
  ACCOUNT_OWNER VARCHAR(255),
  ACCESS_NAME VARCHAR(100),
  ACCESS_TYPE VARCHAR(100),
  TYPE VARCHAR(2) NOT NULL,
  SERVICE VARCHAR(255),
  SERVICE_NAME VARCHAR(100),
  SERVICE_PROFILE VARCHAR(100),
  PARTICIPANT VARCHAR(255),
  PARTICIPANT_NAME VARCHAR(100),
  PARTICIPANT_ID VARCHAR(100),
  RECERT_RESULT VARCHAR(2),
  ACTION VARCHAR(2),
  COMMENTS VARCHAR(2000),
  STARTED VARCHAR(50),
  COMPLETED VARCHAR(50),
  RESULT_SUMMARY VARCHAR(2),
  TENANT VARCHAR(255),
  CONSTRAINT RECERT_PK PRIMARY KEY(PROCESS_ID, ACTIVITY_ID)
) IN itimdbTag.TMTS32LG;

CREATE UNIQUE INDEX TIMPMKY215
  ON RECERTIFICATIONLOG(PROCESS_ID, ACTIVITY_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;

CREATE TABLE SCRIPT  (
		  TYPE CHAR(1) NOT NULL,
		  ID VARCHAR(50) NOT NULL,
		  JOIN_ORDER SMALLINT NOT NULL,
		  PERSON_ATTRIBUTE VARCHAR(100) NOT NULL,
		  FIRST_LAST SMALLINT,
		  CONCATENATE_CHAR CHAR(10),
		  CONSTRAINT SCRIPT_PK PRIMARY KEY(TYPE, ID, JOIN_ORDER)
) IN itimdbTag.TMTSMISC;

CREATE UNIQUE INDEX TIMPMKY225
  ON SCRIPT(TYPE, ID, JOIN_ORDER)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE VIEW ROOTPROCESSVIEW (ID, TYPE, REQUESTER) AS
(
  SELECT ID, TYPE, REQUESTER
  FROM PROCESS
  WHERE  PROCESS.ROOT_PROCESS_ID  = 0
  OR PROCESS.ROOT_PROCESS_ID  = PROCESS.ID
  AND PROCESS.TYPE IN ('OP','AA','AC','UA','UC','UD','US','UR','UO','SR','OA','OC','AD',
            'AS','AR','AP','LO','AO','LS','LR','LP','LD','MS','MR','MD','DA','DC',
            'DD','PA','PC','PD','SA','SC','SD','PS','EN','RC','PE','LC','CP','EP','RP','SM','MA','EA','ER','HR')
);

CREATE VIEW SUBPROCESSVIEW (ROOT_PROCESS_ID, SUBMITTED, COMPLETED, SUBJECT_PROFILE,
  SUBJECT_SERVICE, SUBJECT, TYPE, REQUESTER, RESULT_SUMMARY)
AS
(
  SELECT ROOT_PROCESS_ID, SUBMITTED, COMPLETED, SUBJECT_PROFILE,
    SUBJECT_SERVICE, SUBJECT, TYPE, REQUESTER,
    CASE
      WHEN RESULT_SUMMARY = '' THEN 'PE'
      ELSE RESULT_SUMMARY
    END as RESULT_SUMMARY
  FROM PROCESS 
  WHERE TYPE IN ('OA', 'OC', 'AD', 'AS', 'AR', 'AP')
);

CREATE VIEW PENDING_APPROVAL (PROCESSID, RESULT_SUMMARY)
AS
(
  SELECT PROCESS.ID,
    CASE
      WHEN WORKITEM.LOCK_OWNER IS NULL THEN ACTIVITY.RESULT_SUMMARY
      ELSE 'LK'
    END
  FROM PROCESS, ACTIVITY, WORKITEM
  WHERE WORKITEM.PROCESS_ID = PROCESS.ID AND WORKITEM.ACTIVITY_ID = ACTIVITY.ID
);



CREATE VIEW SUSPENDED_USERS (REQUESTEE, COMPLETED) AS
(
  SELECT PROCESS.REQUESTEE, MAX(PROCESS.COMPLETED)
  FROM PROCESS 
  WHERE PROCESS.TYPE = 'US'
  GROUP BY PROCESS.REQUESTEE
);


CREATE VIEW SUSPENDED_ACCOUNT_OPERATIONS (REQUESTEE, SUBJECT_SERVICE, SUBJECT, SUBJECT_PROFILE, COMPLETED) AS
(
  SELECT PROCESS.REQUESTEE, PROCESS.SUBJECT_SERVICE, PROCESS.SUBJECT, PROCESS.SUBJECT_PROFILE, MAX(PROCESS.COMPLETED)
  FROM PROCESS 
  WHERE PROCESS.TYPE = 'AS'
  GROUP BY PROCESS.REQUESTEE, PROCESS.SUBJECT_SERVICE, PROCESS.SUBJECT, PROCESS.SUBJECT_PROFILE
);

CREATE VIEW PROCESS_VIEW (ID, REQUESTER, REQUESTEE)
AS
(
  SELECT PROCESS.ID, COALESCE(PROCESS.REQUESTER, ' ') as REQUESTER, COALESCE(PROCESS.REQUESTEE, ' ') as REQUESTEE
  FROM PROCESS
);

CREATE TABLE MANUAL_SERVICE_RECON_ACCOUNTS (
  GLOBAL_ID VARCHAR(255) NOT NULL,
  ACCOUNTS CLOB(10M),
  ROW_ID ROWID GENERATED ALWAYS NOT NULL,
  PRIMARY KEY (GLOBAL_ID)
)IN itimdbTag.TMTSMISC;

CREATE UNIQUE INDEX TIMPMKY230
  ON MANUAL_SERVICE_RECON_ACCOUNTS(GLOBAL_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;

CREATE LOB TABLESPACE TMTSLO17 IN itimdbTag LOG NO
BUFFERPOOL BP0 LOCKSIZE ANY;

CREATE AUXILIARY TABLE TMTBLO17 IN itimdbTag.TMTSLO17
  STORES MANUAL_SERVICE_RECON_ACCOUNTS
  COLUMN ACCOUNTS;

CREATE UNIQUE INDEX TMLONX17 ON TMTBLO17
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE VIEW_DEFINITION (
  ID INT NOT NULL,
  NAME VARCHAR(100),
  DESCRIPTION VARCHAR(2000),
  CONSTRAINT VIEW_DEFINITION_PK PRIMARY KEY(ID)
)IN itimdbTag.TMTS4SM;

CREATE UNIQUE INDEX TIMPMKY235
  ON VIEW_DEFINITION(ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;


CREATE TABLE TASKS_VIEWABLE (
  TASK_ID VARCHAR(255) NOT NULL,
  VIEW_ID INT NOT NULL,
  VIEWABLE CHAR(1) NOT NULL DEFAULT 'N',
  CONSTRAINT TASKS_VIEWABLE_PK PRIMARY KEY(TASK_ID, VIEW_ID),
  CONSTRAINT VIEW_ID_FK FOREIGN KEY (VIEW_ID) REFERENCES VIEW_DEFINITION (ID)
)IN itimdbTag.TMTS4SM;

CREATE UNIQUE INDEX TIMPMKY240
  ON TASKS_VIEWABLE(TASK_ID, VIEW_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;
  
CREATE TABLE COMMON_TASKS  (
	PERSONA VARCHAR(100) NOT NULL, 
	TASK_ID VARCHAR(255) NOT NULL,
	CONSTRAINT COMMON_TASKS_PK PRIMARY KEY(PERSONA, TASK_ID) 
) IN itimdbTag.TMTS4SM;  

CREATE UNIQUE INDEX TIMPMKY245
  ON COMMON_TASKS(PERSONA, TASK_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;
  
CREATE TABLE SUMMARY_ORDER (
    RESULT_SUMMARY VARCHAR(2) NOT NULL,
    RESULT_SEVERITY SMALLINT NOT NULL,
    CONSTRAINT Uni_ResultSummary PRIMARY KEY(RESULT_SUMMARY)
)IN itimdbTag.TMTS4SM;

CREATE UNIQUE INDEX TIMPMKY250
  ON SUMMARY_ORDER(RESULT_SUMMARY)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;

CREATE TABLE PASSWORD_SYNCH (
    ACTIVITY_ID DECIMAL(19,0) NOT NULL,
    ACCOUNT_DN VARCHAR(512),
    TIME_REQUESTED VARCHAR(50),
    PASSWORD VARCHAR(500),

    CONSTRAINT PWD_SYNCH_PK PRIMARY KEY(ACTIVITY_ID)
) IN itimdbTag.TMTSMISC;

CREATE UNIQUE INDEX TIMPMKY255
  ON PASSWORD_SYNCH(ACTIVITY_ID)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;

CREATE INDEX PS_ACCDN_X ON PASSWORD_SYNCH(ACCOUNT_DN)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;

CREATE INDEX PS_TIME_X ON PASSWORD_SYNCH(TIME_REQUESTED)
  USING STOGROUP itimsgTag PRIQTY 10000 SECQTY 1000;

